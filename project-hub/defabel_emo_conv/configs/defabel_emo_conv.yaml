{
    "port": 9001,

    "server_name": "potato annotator",

    "annotation_task_name": "Defabel_Emotionen",

    # Potato will write the annotation file for all annotations to this
    # directory, as well as per-annotator output files and state information
    # necessary to restart annotation.
    "output_annotation_dir": "./anno_output_main_1",

    # The output format for the all-annotator data. Allowed formats are:
    # * jsonl
    # * json (same output as jsonl)
    # * csv
    # * tsv
    #
    "output_annotation_format": "tsv",

    # If annotators are using a codebook, this will be linked at the top to the
    # instance for easy access
    "annotation_codebook_url": "",

    "data_files": [
      # 'data/example_data.json'
      'data/data_main_defabel_1.json'
    ],

    "item_properties": {
        "id_key": "id",
        "text_key": "text",
    },

  #list_as_text is used when the input text is actually a list of texts, usually used for best-worst-scaling
    "list_as_text": {
      "text_list_prefix_type": 'None',
      "horizontal": True,
    },
    # "list_as_text": {
    #   "text_list_prefix_type": 'alphabet'
    # },

    "user_config": {

      "allow_all_users": True,

      "users": [  ],
    },

    #defining the ways annotators entering the annotation system
    "login": {
       "type": 'url_direct',    #can be 'password' or 'url_direct'
       "url_argument": 'PROLIFIC_PID' # when the login type is set to 'url_direct', 'url_argument' must be setup for a direct url argument login
    },

    #the jumping-to-id function will be disabled if "jumping_to_id_disabled" is True
    "jumping_to_id_disabled": True,

  #the navigation bar will be hidden to the annotators if "hide_navbar" is True
    "hide_navbar": True,

  # define the surveyflow of the system, set up the pages before and after the data annotation page
    "surveyflow": {
      "on": True,
      #"order" : ['pre_annotation', 'prestudy_passed', 'prestudy_failed', 'post_annotation'],
      "order" : ['pre_annotation', 'post_annotation'],
      "pre_annotation": ["surveyflow/&#220;bersicht.jsonl"],
      "pre_annotation": ['surveyflow/&#220;bersicht.jsonl', 'surveyflow/Aufgabe.jsonl', 'surveyflow/Einwilligung.jsonl'],
      "prestudy_passed": ['surveyflow/prestudy_pass.jsonl'],
      "prestudy_failed": ['surveyflow/prestudy_fail.jsonl'],
      "post_annotation": ['surveyflow/Bewertung.jsonl', 'surveyflow/Ende.jsonl'],
      # "post_annotation": ['surveyflow/experience.jsonl', 'surveyflow/demographic_questions.jsonl','surveyflow/end.jsonl'],
      # If set, we will automatically generate testing questions similar to the annotation instances, but explicitly ask the annotator to choose one option
      "testing": ['surveyflow/testing.jsonl'],
    },

    #prestudy test, annotators who fail this test will be disalloed to continue annotation
    "prestudy": {
        "on": False,
        "minimum_score": 0.8,
        "groundtruth_key": 'whether_match',
        "question_key": 'Whether the presented sentences are discussing the same scientific finding',
        "answer_mapping": {'Yes': True, 'No': False},
        "pass_page": 'surveyflow/prestudy_pass.jsonl',
        "fail_page": 'surveyflow/prestudy_fail.jsonl'
    },


    "automatic_assignment": {
      #whether do automatic task assignment for annotators, default False.
      "on": True,
      "output_filename": 'task_assignment.json',
      "sampling_strategy": 'ordered',
      "labels_per_instance": 3,
      "instance_per_annotator": 5,
      "test_question_per_annotator": 1, # you must set up the test question in surveyflow to use this function

      "users": [  ],
    },


    # How many seconds do you want the annotators spend on each instance, after
    # that, an alert will be sent per alert_time_each_instance seconds.
    "alert_time_each_instance": 10000000,
    # "horizontal_key_bindings": true,

"annotation_schemes": [

      # Convincingness

      {
          "annotation_type": "radio",
          "name": "stance",
          "description": "Stimmen Sie der Aussage zu?",

          # If true, display the labels horizontally
          "horizontal": False,

          "labels": [
             "Ich stimme voll und ganz zu.", 
             "Ich stimme zu.", 
             "Ich bin mir nicht sicher.", 
             "Ich bin anderer Meinung.",
             "Ich bin völlig anderer Meinung."
          ],
        "label_requirement": {"required":True},
          "sequential_key_binding": True,
      },

      {
        "annotation_type": "radio",
        "name": "topic_familiarity",
        "description": "Wie gut kennen Sie sich mit dem Thema aus?",

        # If true, display the labels horizontally
        "horizontal": False,

        "labels": [
          "Ich würde es sehr gerne vermeiden, über dieses Thema zu sprechen.", 
          "Ich habe kaum etwas über dieses Thema gehört.", 
          "Ich könnte mich an einem Smalltalk über dieses Thema beteiligen.", 
          "Ich könnte mich an einer Diskussion mit Freunden/Kollegen/Arbeitskollegen über dieses Thema beteiligen.",
          "Ich könnte mich an einer Expertendiskussion über dieses Thema beteiligen."
        ],
        "label_requirement": {"required":True},
        "sequential_key_binding": True,
      },


      {
          "annotation_type": "radio",
          "name": "convincingness",
          "description": "Wie überzeugend ist das Argument für Sie, auf einer Skala von 1-5? <br/> (1=nicht überzeugend; 5=absolut überzeugend)",

          # If true, display the labels horizontally
          "horizontal": True,

          "labels": [
             "1", 
             "2", 
             "3", 
             "4",
             "5"
          ],
        "label_requirement": {"required":True},
          "sequential_key_binding": True,
      },


    # binary emotion question

    {
        "annotation_type": "radio",
        "name": "emotion_binary",
        "description": "Wird eine Emotion in Ihnen ausgelöst wenn sie das Argument lesen?",

        # If true, display the labels horizontally
        "horizontal": False,

        "labels": [
          "Ja.", 
          "Nein.", 
        ],
        "label_requirement": {"required":True},
        "sequential_key_binding": True,
    },


    # add the emotion question
      {
        "annotation_type": "radio",
        "name": "emotion",
        "description": "Beantworten Sie diese Frage nur wenn Sie die vorangegangene Frage mit Ja beantwortet haben.  <br/>
         Welche der folgenden Emotionen wird am Stärksten in Ihnen ausgelöst wenn Sie das Argument lesen?",

        # If true, display the labels horizontally
        "horizontal": False,

        "labels": [
          "Freude", "Wut", "Angst", "Traurigkeit", "Ekel", "Überraschung", "Stolz", "Interesse", "Scham", "Schuld",
        ],

        # If true, the field will have an optional text box the user can
        'has_free_response': {
            "instruction": 'Eine andere Emotion:',
        },

        # "label_requirement": {"required":True},

        "sequential_key_binding": True,
      },



  ],

    # The html that changes the visualiztation for your task. Change this file
    # to influence the layout and description of your task. This is not a full
    # HTML page, just the piece that does lays out your task's pieces
    #"html_layout": "templates/examples/fixed_keybinding_layout.html",
    "html_layout": "default",

    # The core UI files for Potato. You should not need to change these normally.
    #
    # Exceptions to this might include:
    # 1) You want to add custom CSS/fonts to style your task
    # 2) Your layout requires additional JS/assets to render
    # 3) You want to support additional keybinding magic
    #
    # if you want to use your own template,
    # please replace the string as a path to the template
    "base_html_template": "default",
    "header_file": "default",

    # This is where the actual HTML files will be generated
    "site_dir": "default"

}
